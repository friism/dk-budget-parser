#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EB.Budget.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EBBudget")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBudgetLine(BudgetLine instance);
    partial void UpdateBudgetLine(BudgetLine instance);
    partial void DeleteBudgetLine(BudgetLine instance);
    #endregion
		
		public dbDataContext() : 
				base(global::EB.Budget.Model.Properties.Settings.Default.EBBudgetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BudgetLine> BudgetLines
		{
			get
			{
				return this.GetTable<BudgetLine>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BudgetLine")]
	public partial class BudgetLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LineCode;
		
		private System.Nullable<int> _ParentLineId;
		
		private int _Year;
		
		private decimal _CurrentBudget;
		
		private decimal _BudgetYear1;
		
		private decimal _BudgetYear2;
		
		private decimal _BudgetYear3;
		
		private decimal _BudgetMinusYear1;
		
		private decimal _BudgetMinusYear2;
		
		private byte _LineLevel;
		
		private string _LineName;
		
		private EntitySet<BudgetLine> _BudgetLines;
		
		private EntityRef<BudgetLine> _BudgetLine1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLineCodeChanging(string value);
    partial void OnLineCodeChanged();
    partial void OnParentLineIdChanging(System.Nullable<int> value);
    partial void OnParentLineIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnCurrentBudgetChanging(decimal value);
    partial void OnCurrentBudgetChanged();
    partial void OnBudgetYear1Changing(decimal value);
    partial void OnBudgetYear1Changed();
    partial void OnBudgetYear2Changing(decimal value);
    partial void OnBudgetYear2Changed();
    partial void OnBudgetYear3Changing(decimal value);
    partial void OnBudgetYear3Changed();
    partial void OnBudgetMinusYear1Changing(decimal value);
    partial void OnBudgetMinusYear1Changed();
    partial void OnBudgetMinusYear2Changing(decimal value);
    partial void OnBudgetMinusYear2Changed();
    partial void OnLineLevelChanging(byte value);
    partial void OnLineLevelChanged();
    partial void OnLineNameChanging(string value);
    partial void OnLineNameChanged();
    #endregion
		
		public BudgetLine()
		{
			this._BudgetLines = new EntitySet<BudgetLine>(new Action<BudgetLine>(this.attach_BudgetLines), new Action<BudgetLine>(this.detach_BudgetLines));
			this._BudgetLine1 = default(EntityRef<BudgetLine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string LineCode
		{
			get
			{
				return this._LineCode;
			}
			set
			{
				if ((this._LineCode != value))
				{
					this.OnLineCodeChanging(value);
					this.SendPropertyChanging();
					this._LineCode = value;
					this.SendPropertyChanged("LineCode");
					this.OnLineCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentLineId", DbType="Int")]
		public System.Nullable<int> ParentLineId
		{
			get
			{
				return this._ParentLineId;
			}
			set
			{
				if ((this._ParentLineId != value))
				{
					if (this._BudgetLine1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentLineIdChanging(value);
					this.SendPropertyChanging();
					this._ParentLineId = value;
					this.SendPropertyChanged("ParentLineId");
					this.OnParentLineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBudget", DbType="Decimal(18,0) NOT NULL")]
		public decimal CurrentBudget
		{
			get
			{
				return this._CurrentBudget;
			}
			set
			{
				if ((this._CurrentBudget != value))
				{
					this.OnCurrentBudgetChanging(value);
					this.SendPropertyChanging();
					this._CurrentBudget = value;
					this.SendPropertyChanged("CurrentBudget");
					this.OnCurrentBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetYear1", DbType="Decimal(18,0) NOT NULL")]
		public decimal BudgetYear1
		{
			get
			{
				return this._BudgetYear1;
			}
			set
			{
				if ((this._BudgetYear1 != value))
				{
					this.OnBudgetYear1Changing(value);
					this.SendPropertyChanging();
					this._BudgetYear1 = value;
					this.SendPropertyChanged("BudgetYear1");
					this.OnBudgetYear1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetYear2", DbType="Decimal(18,0) NOT NULL")]
		public decimal BudgetYear2
		{
			get
			{
				return this._BudgetYear2;
			}
			set
			{
				if ((this._BudgetYear2 != value))
				{
					this.OnBudgetYear2Changing(value);
					this.SendPropertyChanging();
					this._BudgetYear2 = value;
					this.SendPropertyChanged("BudgetYear2");
					this.OnBudgetYear2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetYear3", DbType="Decimal(18,0) NOT NULL")]
		public decimal BudgetYear3
		{
			get
			{
				return this._BudgetYear3;
			}
			set
			{
				if ((this._BudgetYear3 != value))
				{
					this.OnBudgetYear3Changing(value);
					this.SendPropertyChanging();
					this._BudgetYear3 = value;
					this.SendPropertyChanged("BudgetYear3");
					this.OnBudgetYear3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetMinusYear1", DbType="Decimal(18,0) NOT NULL")]
		public decimal BudgetMinusYear1
		{
			get
			{
				return this._BudgetMinusYear1;
			}
			set
			{
				if ((this._BudgetMinusYear1 != value))
				{
					this.OnBudgetMinusYear1Changing(value);
					this.SendPropertyChanging();
					this._BudgetMinusYear1 = value;
					this.SendPropertyChanged("BudgetMinusYear1");
					this.OnBudgetMinusYear1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetMinusYear2", DbType="Decimal(18,0) NOT NULL")]
		public decimal BudgetMinusYear2
		{
			get
			{
				return this._BudgetMinusYear2;
			}
			set
			{
				if ((this._BudgetMinusYear2 != value))
				{
					this.OnBudgetMinusYear2Changing(value);
					this.SendPropertyChanging();
					this._BudgetMinusYear2 = value;
					this.SendPropertyChanged("BudgetMinusYear2");
					this.OnBudgetMinusYear2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineLevel", DbType="TinyInt NOT NULL")]
		public byte LineLevel
		{
			get
			{
				return this._LineLevel;
			}
			set
			{
				if ((this._LineLevel != value))
				{
					this.OnLineLevelChanging(value);
					this.SendPropertyChanging();
					this._LineLevel = value;
					this.SendPropertyChanged("LineLevel");
					this.OnLineLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string LineName
		{
			get
			{
				return this._LineName;
			}
			set
			{
				if ((this._LineName != value))
				{
					this.OnLineNameChanging(value);
					this.SendPropertyChanging();
					this._LineName = value;
					this.SendPropertyChanged("LineName");
					this.OnLineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetLine_BudgetLine", Storage="_BudgetLines", ThisKey="Id", OtherKey="ParentLineId")]
		public EntitySet<BudgetLine> BudgetLines
		{
			get
			{
				return this._BudgetLines;
			}
			set
			{
				this._BudgetLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BudgetLine_BudgetLine", Storage="_BudgetLine1", ThisKey="ParentLineId", OtherKey="Id", IsForeignKey=true)]
		public BudgetLine BudgetLine1
		{
			get
			{
				return this._BudgetLine1.Entity;
			}
			set
			{
				BudgetLine previousValue = this._BudgetLine1.Entity;
				if (((previousValue != value) 
							|| (this._BudgetLine1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BudgetLine1.Entity = null;
						previousValue.BudgetLines.Remove(this);
					}
					this._BudgetLine1.Entity = value;
					if ((value != null))
					{
						value.BudgetLines.Add(this);
						this._ParentLineId = value.Id;
					}
					else
					{
						this._ParentLineId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BudgetLine1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BudgetLines(BudgetLine entity)
		{
			this.SendPropertyChanging();
			entity.BudgetLine1 = this;
		}
		
		private void detach_BudgetLines(BudgetLine entity)
		{
			this.SendPropertyChanging();
			entity.BudgetLine1 = null;
		}
	}
}
#pragma warning restore 1591
